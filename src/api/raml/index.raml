#%RAML 0.8
---
title: API Resource
baseUri: https://localhost/api/
protocols: [HTTPS]
mediaType: application/json

traits:
  - auth: !include _traits/auth.raml

/users:
  description: User resource.
  get:
    is: [auth: { roles: 'staff' }]
    description: Retrive the list of the users.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                },
                {
                  "id": "54d8ae163fd30364605c81a9",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+8211332",
                  "roles": [
                    "citizen",
                    "staff"
                  ]
                },
                ...
              ]
  post:
    description: Create a new user.
    body:
      application/json:
        example: |
          {
            "firstname": "Romain",
            "lastname": "Terieur",
            "phone": "+6624582",
            "roles": [
              "citizen"
            ]
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "54d8ae163fd30364605c81a4",
                "firstname": "Romain",
                "lastname": "Terieur",
                "phone": "+6624582",
                "roles": [
                  "citizen"
                ]
              }

  /{userId}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve the details of a specific user.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update the details of a specific user.
      body:
        application/json:
          example: |
            {
              "firstname": "Romain",
              "lastname": "Terieur",
              "phone": "+6624582",
              "roles": [
                "citizen"
              ]
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    delete:
      is: [auth: {roles: 'staff'} ]
      description: Delete a specific user.
      responses:
        204:
          body:









/data:
  description: Data resource.
  /populate:
    post:
      description: Allow to populate random data to have a starting situation.
      responses:
        200:
          body:










/issue:
  description: Issue resource.
  get:
    description: Retrieve a list of issues

    queryParameters:
      author:
        type: string
        description: An author's full name
        example: LL92
        required: true
      issueType:
        type: string
        description: An issue's type
        example: broken streetlight
        required: true
      status:
        type: string
        description: An issue's status
        example: pending
        required: true
      latitude:
        type: number
        description: An issue's latitude
        example: 46.7833
        required: true
      longitude:
        type: number
        description: An issue's longitude
        example: 6.65
        required: true


    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "123",
                  "author": "LL92",
                  "responsable": "staff_member_one",
                  "issueType": "broken streetlight",
                  "description": "Lampadaire mort",
                  "status" : "created",
                  "latitude": "46.7833",
                  "longitude": "6.65"
                },
                {
                  "id": "124",
                  "author": "Tony2017",
                  "responsable": "staff_member_one",
                  "issueType": "broken roadsign",
                  "description": "Panneau casse",
                  "status" : "resolved",
                  "latitude": "46.7832",
                  "longitude": "6.61"
                },
                ...
              ]
  post:
    description: Create a new issue.
    body:
      application/json:
        example: |
          {
                  "author": "LL92",
                  "responsable": "staff_member_one",
                  "issueType": "broken streetlight",
                  "description": "Lampadaire mort", 
                  "latitude": "46.7833",
                  "longitude": "6.65"
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
               "id": "123",
                "author": "LL92",
                "responsable": "staff_member_one",
                "issueType": "broken streetlight",
                "description": "Lampadaire mort",
                "status" : "created",
                "latitude": "46.7833",
                "longitude": "6.65"
              }

  /{issueId}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve an issue specified by its id
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "123",
                  "author": "LL92",
                  "responsable": "staff_member_one",
                  "description": "Lampadaire mort",
                  "status" : "pending",
                  "latitude": "46.7833",
                  "longitude": "6.65",
                  "comment" : 
                    [
                      {
                        "author" : "Tony2017",
                        "date" : "2015.02.15",
                        "content":"le lampadaire à disparu lol !"
                      },
                      {
                        "author" : "LL92",
                        "date" : "2015.02.15",
                        "content":"YOLO la lampe"
                      }
                    ]
                }
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update an issue specified by its id
      body:
        application/json:
          example: |
            {
              "id": "123",
              "author": "LL92",
              "responsable": "staff_member_one",
              "description": "Lampadaire mort",
              "status" : "resolved",
              "latitude": "46.7833",
              "longitude": "6.65"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "123",
                  "author": "LL92",
                  "responsable": "staff_member_one",
                  "description": "Lampadaire mort",
                  "status" : "resolved",
                  "latitude": "46.7833",
                  "longitude": "6.65"
                }
    






/issueType:
    description: issueType ressource.
    get:    
      description: Retrieve a list of the type of issues
      responses:
        200:
          body:
            application/json:
              example: |
                [
                  {
                    "id": "1",
                    "name": "broken streetlight",
                    "description": "Lampadaire hors fonction, ampoule defectueuse"
                  },
                  {
                    "id": "2",
                    "name": "dangerous crossroad",
                    "description": "carrefour dangereux, mauvaise visibilité"
                  },
                  {
                    "id": "3",
                    "name": "graffiti",
                    "description": "dommage sur des biens publics du à des graffitis"
                  },
                  ...
                ]
    post:
      description: Create a type of issue
      body:
        application/json:
          example: |
            {              
              "name": "broken streetlight",
              "description": "Lampadaire hors fonction, ampoule defectueuse"
            }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                  "id": "1",                  
                  "name": "broken streetlight",
                  "description": "Lampadaire hors fonction, ampoule defectueuse"
                }
    /{issueTypeId}:
      get:
        description: Retrieve a type of issue specified by its id
        body:
          application/json:
            example: |
              {
                "id": "1",                  
                "name": "broken streetlight",
                "description": "Lampadaire hors fonction, ampoule defectueuse"
              }
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "id": "1",                  
                    "name": "broken streetlight",
                    "description": "Lampadaire hors fonction, ampoule defectueuse"
                  }
      put:
        description: Update a type of issue specified by its id
        body:
          application/json:
            example: |
              {
                "id": "1",                  
                "name": "broken streetlight",
                "description": "Lampadaire hors fonction, ampoule defectueuse, raccordement HS"
              }
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "id": "1",                  
                    "name": "broken streetlight",
                    "description": "Lampadaire hors fonction, ampoule defectueuse, raccordement HS"
                  }
      delete:
        description: Delete a type of issue specified by its id
        responses:
          204:
            body:





/action/comment:
  post:
  /{commentId}:
    get:
    put:
    delete:
  /{issueId}/statut:
    put:
  /{issueId}/responsable:
    put: