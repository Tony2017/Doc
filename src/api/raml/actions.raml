description: Action ressource.
/comments:
  post:
    is: [auth: {roles: 'any'} ]
    description: Create a new comment.
    body:
      application/json:
        example: |
          {
            "author": "tony2017",
            "type": "addComment",
            "content": "le lampadaire à disparu lol !"
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "commentId": "7",
                "author": "tony2017",
                "type": "addComment",
                "date": "2015.02.15",
                "content": "le lampadaire à disparu lol !"
              }
  /{commentId}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve a comment specidied by its id
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "commentId": "7",
                  "author": "tony2017",
                  "type": "addComment",
                  "date": "2015.02.15",
                  "content": "le lampadaire à disparu lol !"
                }
    put:
      is: [auth: {roles: 'any'} ]
      description: Update a comment specified by its id
      body:
        application/json:
          example: |
            {
              "commentId": "7",
              "author": "tony2017",
              "type": "addComment",
              "date": "2015.02.25",
              "content": "le lampadaire est à nouveau fonctionnel, c'était rapide"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "commentId": "7",
                  "author": "tony2017",
                  "type": "addComment",
                  "date": "2015.02.25",
                  "content": "le lampadaire est à nouveau fonctionnel, c'était rapide"
                }
    delete:
      is: [auth: {roles: 'any'} ]
      description: Delete a specific comment.
      responses:
        204:
          body:
/issuesStatut:
  /{issueId}:
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update an status related to an issue by its id
      body:
        application/json:
          example: |
            {
              "author": "tony2017",
              "type": "upStatus",
              "content": "resolved"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "author": "tony2017",
                  "type": "upStatus",
                  "date": "2015.02.15",
                  "content": "resolved"
                }
/issuesResponsable:
  /{issueId}:
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update an responsable related to an issue by its id
      body:
        application/json:
          example: |
            {
              "author": "tony2017",
              "type": "upResponsable",
              "content": "LL92"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "author": "tony2017",
                  "type": "upResponsable",
                  "date": "2015.02.15",
                  "content": "LL92"
                }